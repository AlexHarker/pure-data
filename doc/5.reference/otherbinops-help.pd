<<<<<<< HEAD
#N canvas 411 27 645 744 12;
#X floatatom 136 503 0 0 0 0 - - -;
#X floatatom 99 502 0 0 0 0 - - -;
#X floatatom 59 501 0 0 0 0 - - -;
#X floatatom 211 502 0 0 0 0 - - -;
#X floatatom 173 502 0 0 0 0 - - -;
#X obj 136 476 <;
#X floatatom 416 502 0 0 0 0 - - -;
#X floatatom 378 502 0 0 0 0 - - -;
#X floatatom 298 502 0 0 0 0 - - -;
#X floatatom 334 502 0 0 0 0 - - -;
#X obj 478 230 &;
#X obj 518 229 |;
#X obj 495 161 &&;
#X obj 495 187 ||;
#X obj 378 475 &;
#X obj 416 475 |;
#X obj 298 475 &&;
#X obj 334 475 ||;
#X obj 61 106 >;
#X obj 110 106 >=;
#X obj 63 137 ==;
#X obj 201 107 <=;
#X obj 157 106 <;
#X obj 59 475 >;
#X obj 99 476 >=;
#X obj 211 476 ==;
#X obj 173 476 <=;
#X floatatom 98 334 0 0 0 0 - - -;
#X floatatom 169 335 0 0 0 0 - - -;
#X obj 169 363 t b f;
#X obj 107 137 !=;
#X text 84 308 set left and right inputs here;
#X floatatom 504 503 0 0 0 0 - - -;
#X floatatom 456 502 0 0 0 0 - - -;
#X obj 478 254 <<;
#X obj 519 253 >>;
#X obj 504 476 <<;
#X obj 456 475 >>;
#X text 62 63 Relational operators output 1 or 0 depending on whether
the relation is true or false.;
#X text 239 109 greater than \, etc.;
#X text 153 134 equals and not-equals;
#X obj 97 364 f;
#X floatatom 250 502 0 0 0 0 - - -;
#X obj 250 476 !=;
#X text 57 162 Logical operators: "&&" ("and") outputs one if both
inputs are nonzero and 0 otherwise. "||" ("or") outputs 1 if either
one is nonzero.;
#X text 54 227 Bitwise operators: "&" and "|" perform "and" and "or"
on each bit of the inputs considered as binary numbers. ">>" and "<<"
perform left and right signed bit shifts.;
#X text 333 22 Fixed-point binary operations;
#X obj 57 21 >;
#X obj 91 21 >=;
#X obj 159 21 <=;
#X obj 125 21 <;
#X obj 193 21 ==;
#X obj 228 21 !=;
#X text 372 325 You can supply a creation argument to initialize the
right inlet:, f 25;
#X floatatom 499 368 0 0 0 0 - - -;
#X floatatom 499 418 0 0 0 0 - - -;
#X obj 499 393 == 0;
#X floatatom 552 369 0 0 0 0 - - -;
#X floatatom 552 419 0 0 0 0 - - -;
#X obj 552 394 < 5;
#X obj 262 21 div;
#X obj 297 21 mod;
#X floatatom 111 658 0 0 0 0 - - -;
#X floatatom 71 657 0 0 0 0 - - -;
#X floatatom 71 558 0 0 0 0 - - -;
#X floatatom 113 560 0 0 0 0 - - -;
#X obj 113 590 t b f;
#X obj 71 589 f;
#X obj 71 631 div;
#X obj 111 632 mod;
#X text 414 693 Updated for Pd version 0.47;
#X obj 345 650 +;
#X text 380 651 (etc) - arithmetic;
#X text 269 649 see also:;
#X text 186 555 div and mod do integer division. div outputs the integer
quotient and mod outputs the remainder (modulus). In addition the "%"
operator (provided for back compatibility) is like "mod" but acts differently
for negative inputs (and might act variously depending on CPU design).
=======
#N canvas 572 52 696 742 12;
#X floatatom 33 459 2 0 0 0 - - -;
#X obj 93 431 <;
#X obj 246 222 &;
#X obj 278 222 |;
#X obj 238 20 &&;
#X obj 269 20 ||;
#X obj 267 64 >;
#X obj 298 64 >=;
#X obj 267 110 ==;
#X obj 298 87 <=;
#X obj 267 87 <;
#X obj 33 431 >;
#X obj 63 431 >=;
#X obj 154 431 ==;
#X obj 124 431 <=;
#X floatatom 33 352 0 0 0 0 - - -;
#X obj 298 110 !=;
#X obj 246 246 <<;
#X obj 278 246 >>;
#X obj 185 431 !=;
#X obj 52 20 >;
#X obj 83 20 >=;
#X obj 145 20 <=;
#X obj 114 20 <;
#X obj 176 20 ==;
#X obj 207 20 !=;
#X floatatom 521 367 0 0 0 0 - - -;
#X obj 521 395 == 0;
#X floatatom 568 367 0 0 0 0 - - -;
#X obj 568 395 < 5;
#X obj 300 20 div;
#X obj 331 20 mod;
#X floatatom 110 602 0 0 0 0 - - -;
#X floatatom 60 602 0 0 0 0 - - -;
#X floatatom 60 506 0 0 0 0 - - -;
#X floatatom 110 506 0 0 0 0 - - -;
#X obj 110 535 t b f;
#X obj 60 578 div;
#X obj 110 577 mod;
#X text 480 693 Updated for version 0.47;
#X obj 120 647 +;
#X text 42 647 see also:;
#X obj 322 431 &;
#X obj 360 431 |;
#X floatatom 440 459 10 0 0 0 - - -;
#X floatatom 400 459 4 0 0 0 - - -;
#X obj 440 431 <<;
#X obj 400 431 >>;
#X floatatom 426 352 0 0 0 0 - - -;
#X obj 426 381 t b f;
#X floatatom 322 352 0 0 0 0 - - -;
#X floatatom 93 459 2 0 0 0 - - -;
#X floatatom 63 459 2 0 0 0 - - -;
#X floatatom 154 459 2 0 0 0 - - -;
#X floatatom 124 459 2 0 0 0 - - -;
#X floatatom 185 459 2 0 0 0 - - -;
#X floatatom 360 459 4 0 0 0 - - -;
#X floatatom 322 459 4 0 0 0 - - -;
#X text 485 21 - other binary operators;
#X obj 362 20 &;
#X obj 393 20 |;
#X obj 455 20 <<;
#X obj 424 20 >>;
#X obj 268 171 &&;
#X text 299 172 - "and" outputs one if both inputs, f 39;
#X obj 268 147 ||;
#X text 317 222 "&" and "|" perform "and" and "or" on each bit of the
inputs considered as binary numbers. ">>" and "<<" perform left and
right signed bit shifts., f 50;
#X text 490 294 You can supply a creation argument to initialize the
right inlet of all these objects:, f 25;
#X floatatom 613 366 0 0 0 0 - - -;
#X floatatom 613 421 0 0 0 0 - - -;
#X obj 613 394 div 3;
#X text 32 290 Set left and right inputs below. Note that a bang message
to the left inlet performs the operation on the previously set values.
, f 58;
#X obj 50 673 sin;
#X obj 84 673 exp;
#X obj 120 673 log;
#X text 155 673 (etc) - math functions, f 35;
#X obj 482 606 %;
#X text 514 606 - deprecated;
#X obj 114 699 expr;
#X text 155 699 - evaluation expressions, f 35;
#X floatatom 171 352 0 0 0 0 - - -;
#X obj 171 381 t b f;
#X floatatom 266 352 0 0 0 0 - - -;
#X obj 266 381 t b f;
#X obj 231 431 &&;
#X obj 266 431 ||;
#X floatatom 231 459 2 0 0 0 - - -;
#X floatatom 266 459 2 0 0 0 - - -;
#X floatatom 231 352 0 0 0 0 - - -;
#X floatatom 521 422 2 0 0 0 - - -;
#X floatatom 568 422 2 0 0 0 - - -;
#X text 333 63 "greater than" / "greater or equal than";
#X text 333 86 "less than: / "less or equal than", f 36;
#X text 333 110 "equals" / "not-equals", f 36;
#X text 299 148 - "or" outputs 1 if either one is a nonzero integer
>>>>>>> document bang mthod for mathematical operators
;
#X text 320 188 are nonzero integers and 0 otherwise;
#X text 63 63 Relational operators for floats (output 1 or 0 depending
on whether the relation is true or false), f 26;
#X text 43 145 Logical operators for integers (float inputs are truncated
to integers), f 30;
#X text 47 218 Bitwise operators for integers (float inputs are truncated
to integers), f 26;
#X text 174 518 div and mod do integer division (float inputs are truncated
to integers). div outputs the integer quotient and mod outputs the
remainder (modulus). In addition the "%" operator (provided for back
compatibility) is like "mod" but acts differently for negative inputs
(and might act variously depending on CPU design)., f 64;
#X text 155 648 (etc) - arithmetic operators, f 35;
#X connect 1 0 51 0;
#X connect 11 0 0 0;
#X connect 12 0 52 0;
#X connect 13 0 53 0;
#X connect 14 0 54 0;
#X connect 15 0 11 0;
#X connect 15 0 12 0;
#X connect 15 0 1 0;
#X connect 15 0 14 0;
#X connect 15 0 13 0;
#X connect 15 0 19 0;
#X connect 19 0 55 0;
#X connect 26 0 27 0;
#X connect 27 0 89 0;
#X connect 28 0 29 0;
#X connect 29 0 90 0;
#X connect 34 0 37 0;
#X connect 34 0 38 0;
#X connect 35 0 36 0;
#X connect 36 0 37 0;
#X connect 36 0 38 0;
#X connect 36 1 37 1;
#X connect 36 1 38 1;
#X connect 37 0 33 0;
#X connect 38 0 32 0;
#X connect 42 0 57 0;
#X connect 43 0 56 0;
#X connect 46 0 44 0;
#X connect 47 0 45 0;
#X connect 48 0 49 0;
#X connect 49 0 47 0;
#X connect 49 0 46 0;
#X connect 49 0 43 0;
#X connect 49 0 42 0;
#X connect 49 1 46 1;
#X connect 49 1 47 1;
#X connect 49 1 43 1;
#X connect 49 1 42 1;
#X connect 50 0 42 0;
#X connect 50 0 47 0;
#X connect 50 0 46 0;
#X connect 50 0 43 0;
#X connect 68 0 70 0;
#X connect 70 0 69 0;
#X connect 80 0 81 0;
#X connect 81 0 11 0;
#X connect 81 0 19 0;
#X connect 81 0 14 0;
#X connect 81 0 13 0;
#X connect 81 0 12 0;
#X connect 81 0 1 0;
#X connect 81 1 19 1;
#X connect 81 1 14 1;
#X connect 81 1 13 1;
#X connect 81 1 12 1;
#X connect 81 1 11 1;
#X connect 81 1 1 1;
#X connect 82 0 83 0;
#X connect 83 0 84 0;
#X connect 83 0 85 0;
#X connect 83 1 85 1;
#X connect 83 1 84 1;
#X connect 84 0 86 0;
#X connect 85 0 87 0;
#X connect 88 0 84 0;
#X connect 88 0 85 0;
