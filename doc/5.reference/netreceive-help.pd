#N canvas 458 23 692 730 12;
#X obj 61 357 netreceive 3000;
#X floatatom 163 453 0 0 0 0 - - -;
#X text 197 454 <--- number of open connections;
#X text 97 690 see also:;
#X obj 183 691 netsend;
#X obj 61 453 print tcp;
#X obj 36 577 print udp;
#X text 33 154 There are some possibilities for intercommunication
with other programs... see the help for "netsend.", f 85;
#X obj 36 549 netreceive -u 3001;
#X text 195 341 creation arguments:;
#X text 263 360 optional -u flag for UDP;
#X text 263 378 optional -b flag for binary;
#X text 263 414 optional port number;
#X obj 219 549 netreceive -b 3002;
#X obj 219 577 print tcp-binary;
#X obj 403 577 print udp-binary;
#X msg 71 274 listen 0;
#X text 171 245 listen message to set or change port;
#X text 177 275 (0 or negative number to close);
#X msg 61 243 listen 3000;
#X text 33 88 By default the messages are ASCII text messages compatible
with Pd (i.e. \, numbers and symbols terminated with a semicolon --
the "FUDI" protocol). The "-b" creation argument specifies binary messages
instead \, which appear in Pd as lists of numbers from 0 to 255 (You
could use this for OSC messages \, for example.), f 83;
#X msg 82 328 send foo \$1;
#X floatatom 82 305 0 0 0 0 - - -;
#X floatatom 219 500 0 0 0 0 - - -;
#X text 119 305 "send" (for TCP connections only) sends back to connected
netreceive objects, f 76;
#X text 453 690 updated for Pd version 0.50.;
#X text 35 621 An old (pre-0.45) calling convention is provided for
compatibility \, port number and following "0" or "1" for TCP or UDP
respectively:, f 67;
#X text 34 490 Other examples:;
#X text 530 607 (UDP port 3004);
#X obj 403 549 netreceive -u -b -f 3003;
#X obj 568 577 print from;
#X text 263 396 optional -f flag for from address & port outlet (0.50+)
;
#X text 33 192 SECURITY NOTE: Don't publish the port number of your
netreceive unless you wouldn't mind other people being able to send
you messages., f 85;
#X text 263 433 optional UDP hostname or multicast address (0.50+)
;
#X text 33 36 The netreceive object opens a socket for TCP ("stream")
or UDP ("datagram") network reception on a specified port. If using
TCP \, an outlet gives you the number of netsend objects (or other
compatible clients) that have opened connections here., f 84;
#X text 85 12 netreceive -- listen for incoming messages from network
;
#X msg 219 524 send 4 5 6 \$1;
#X text 36 658 As of 0.50+ \, Pd supports IPv6 addresses.;
#N canvas 661 94 476 376 UDP 0;
#X obj 45 329 print udp-hostname;
#X text 293 187 IPv4 multicast;
#X text 278 219 IPv6 multicast;
#X obj 45 291 netreceive -u -f;
#X obj 192 329 print from-hostname;
#X text 17 27 As of Pd 0.50+ \, netreceive can specify a hostname which
allows for choosing IP version and multicast listening.;
#X msg 133 253 listen 0;
#X text 199 155 IPv4 and IPv6 messages;
#X msg 105 218 listen 3005 ff00::114;
#X msg 85 187 listen 3005 239.200.200.200;
#X msg 78 154 listen 3005 ::1;
#X msg 69 119 listen 3005 127.0.0.1;
#X msg 45 86 listen 3005 localhost;
#X text 212 85 IPv4 messages (default);
#X text 238 119 IPv4 messages;
#X connect 3 0 0 0;
#X connect 3 1 4 0;
#X connect 6 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 12 0 3 0;
#X restore 402 500 pd UDP IP version and multicast;
#X obj 531 633 netreceive 3004 1;
#X connect 0 0 5 0;
#X connect 0 1 1 0;
#X connect 8 0 6 0;
#X connect 13 0 14 0;
#X connect 16 0 0 0;
#X connect 19 0 0 0;
#X connect 21 0 0 0;
#X connect 22 0 21 0;
#X connect 23 0 36 0;
#X connect 29 0 15 0;
#X connect 29 1 30 0;
#X connect 36 0 13 0;
