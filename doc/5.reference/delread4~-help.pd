#N canvas 555 56 524 590 12;
#X declare -stdpath ./;
#X floatatom 56 336 5 0 1000 0 - - - 0;
#X text 110 391 signal input (delay time in ms);
#X text 194 424 creation argument: name of delay line;
#X text 51 544 see also:;
#X obj 127 544 delwrite~;
#X obj 204 543 delread~;
#X obj 41 59 delread4~;
#X text 51 132 delread4~ implements a 4-point interpolating delay tap
from a corresponding delwrite~ object. The delay in milliseconds of
the tap is specified by the incoming signal., f 60;
#X obj 43 98 vd~;
#X text 307 542 updated for Pd version 0.47;
#X text 51 184 The delay time is always at least one sample and at
most the length of the delay line (specified by a corresponding delwrite~).
In addition \, in case the delwrite~ runs later in the DSP loop than
the delread4~ \, the delay is constrained below by one vector length
(64 samples.) An example showing how to control this to obtain very
short delays is included in doc/3.audio.examples/G05.execution.order.pd
;
#X obj 56 424 delread4~ \$0-delay;
#X obj 174 345 delwrite~ \$0-delay 1000;
#X obj 56 392 line~;
#X obj 174 320 osc~ 440;
#X text 116 56 - read a signal from a delay line at a variable delay
time (4-point-interpolation), f 44;
#X text 76 99 - old \, slightly rude synonym;
#X obj 56 457 output~;
#X obj 56 364 pack f 1000;
#X obj 360 14 declare -stdpath ./;
#X connect 0 0 18 0;
#X connect 11 0 17 0;
#X connect 11 0 17 1;
#X connect 13 0 11 0;
#X connect 14 0 12 0;
#X connect 18 0 13 0;
