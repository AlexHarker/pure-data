#N canvas 751 57 554 682 12;
#X declare -stdpath ./;
#X obj 68 128 osc~ 100;
#X msg 77 155 clear;
#X text 27 407 The transfer function is H(Z) = 1/(1 - aZ^-1).;
#X text 130 154 <-- clear internal state to zero;
#N canvas 796 231 441 392 test 0;
#X obj 90 85 osc~;
#X floatatom 90 52 5 0 0 0 - - - 0;
#X obj 146 304 env~ 16384;
#X floatatom 146 328 5 0 0 0 - - - 0;
#X obj 118 114 tgl 15 0 empty empty empty 0 -6 0 8 #fcfcfc #000000
#000000 0 1;
#X obj 90 112 *~;
#X msg 37 114 set 1;
#X floatatom 334 113 4 -1000 1000 0 - - - 0;
#X text 138 14 Stuff to test it:;
#X obj 215 113 cos~;
#X obj 146 225 cpole~;
#X obj 235 75 phasor~;
#X floatatom 235 48 5 0 0 0 - - - 0;
#X floatatom 146 52 5 0 0 0 - - - 0;
#X obj 174 114 tgl 15 0 empty empty empty 0 -6 0 8 #fcfcfc #000000
#000000 0 1;
#X obj 146 112 *~;
#X obj 146 85 phasor~;
#X floatatom 298 46 5 0 0 0 - - - 0;
#X obj 298 75 / 1000;
#X obj 258 113 -~ 0.25;
#X obj 258 140 cos~;
#X obj 334 142 / 1000;
#X obj 215 178 *~;
#X obj 258 178 *~;
#X obj 233 304 env~ 16384;
#X floatatom 233 328 5 0 0 0 - - - 0;
#X obj 49 291 output~;
#X obj 258 238 declare -stdpath ./;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 5 1;
#X connect 5 0 10 0;
#X connect 6 0 10 0;
#X connect 7 0 21 0;
#X connect 9 0 22 0;
#X connect 10 0 2 0;
#X connect 10 0 26 0;
#X connect 10 0 26 1;
#X connect 10 1 24 0;
#X connect 11 0 19 0;
#X connect 11 0 9 0;
#X connect 12 0 11 0;
#X connect 13 0 16 0;
#X connect 14 0 15 1;
#X connect 15 0 10 0;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 11 1;
#X connect 19 0 20 0;
#X connect 20 0 23 0;
#X connect 21 0 23 1;
#X connect 21 0 22 1;
#X connect 22 0 10 2;
#X connect 23 0 10 3;
#X connect 24 0 25 0;
#X restore 415 524 pd test;
#X text 25 429 (Pd also provides a suite of user-friendly filters.
This and other raw filters are provided for situations which the user-friendly
ones can't handle. See Chapter 8 of http://msp.ucsd.edu/techniques.htm
for an introduction to the necessary theory.), f 69;
#X obj 59 10 cpole~;
#X text 146 131 <-- signal to filter (real part);
#X text 145 211 <-- signal to filter (imaginary part);
#X obj 99 210 sig~;
#X obj 131 233 sig~;
#X text 177 235 <-- filter coefficient (real part);
#X obj 163 257 sig~;
#X obj 68 282 cpole~ 0.9 0.4;
#X text 193 283 <-- creation arguments initialize filter;
#X text 221 299 coefficient (real and imaginary part);
#X text 29 316 The action of cpole~ is:;
#X text 26 358 where y[n] is the output \, x[n] the input \, and a[n]
the filter coefficient (all complex numbers). The filter is unstable
if/when |a[n]|>1.;
#X text 33 47 Cpole~ filters a complex audio signal (first two inlets)
via a one-pole filter \, whose coefficients are controlled by creation
arguments or by another complex audio signal (remaining two inlets).
, f 63;
#X text 186 181 <-- set internal state (real&imaginary parts);
#X msg 89 181 set 0.6 0.8;
#X text 208 259 <-- filter coefficient (imaginary part);
#X text 88 338 y[n] = x[n] + a[n] * y[n-1];
#X obj 111 602 lop~;
#X text 32 603 see also:;
#X obj 125 539 rzero~;
#X obj 65 562 cpole~;
#X obj 65 539 rpole~;
#X obj 185 539 rzero_rev~;
#X obj 125 562 czero~;
#X obj 185 562 czero_rev~;
#X text 284 539 real;
#X text 283 561 complex;
#X text 62 520 1-pole;
#X text 122 520 1-zero;
#X text 172 520 1-zero \, reversed;
#X text 87 502 summary of raw filters:;
#X text 313 639 updated for Pd version 0.43;
#X obj 152 602 hip~;
#X obj 194 602 bp~;
#X obj 231 602 vcf~;
#X text 316 602 - user-friendly filters;
#X obj 276 602 bob~;
#X text 121 10 - complex one-pole (recursive) filter \, raw;
#X connect 0 0 13 0;
#X connect 1 0 13 0;
#X connect 9 0 13 1;
#X connect 10 0 13 2;
#X connect 12 0 13 3;
#X connect 20 0 13 0;
