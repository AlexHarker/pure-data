#N canvas 573 109 1072 536 12;
#X obj 193 306 print x1;
#X obj 271 306 print x2;
#X obj 349 306 print x3;
#X obj 193 278 route 23 54 1, f 34;
#X msg 176 171 234 345 456;
#X msg 193 196 23 34 45;
#X msg 216 246 54 43;
#X msg 204 221 1 foo bar;
#X msg 218 370 impeach ringo starr;
#X obj 218 456 route big apple, f 23;
#X msg 240 396 apple pie;
#X msg 161 370 1 2 3;
#X msg 247 423 big apple pie;
#X msg 141 141 walk the dog;
#X text 57 278 numeric arguments:;
#X text 72 456 symbolic arguments:;
#X obj 218 486 print y1;
#X obj 297 486 print y2;
#X obj 34 13 route;
#X text 813 490 updated for Pd version 0.43;
#X obj 675 185 route 4, f 10;
#X msg 619 157 1 2 3;
#X floatatom 742 157 5 0 0 0 - - -;
#X msg 675 157 4 5 6;
#X obj 428 306 print rejected;
#X obj 376 486 print rejected;
#X obj 851 185 route hi, f 10;
#X msg 819 129 hi there;
#X msg 851 157 see ya;
#X symbolatom 918 157 10 0 0 0 - - -;
#X msg 918 132 symbol see;
#X obj 675 212 print f1;
#X obj 742 212 print f2;
#X obj 851 212 print s1;
#X obj 918 212 print s2;
#X text 88 14 - trim first element and route messages according to
it;
#X text 591 21 If no argument is given \, [route] loads a float argument
of 0 and creates a second inlet so you can change the argument value
(to another float). A single float argument also adds an inlet so it
can be changed to another float. In the same way \, a single symbol
argument adds an inlet that expects a symbol message to change the
argument., f 64;
#N canvas 573 209 990 677 special-selectors/message-types 0;
#X obj 550 295 print z1;
#X obj 627 295 print z2;
#X msg 448 123 bang;
#X msg 551 178 5;
#X msg 591 178 symbol pie;
#X msg 527 152 1 2 3;
#X obj 705 295 print z3;
#X obj 783 295 print z4;
#X obj 861 295 print z5;
#X msg 150 482 list a b c;
#X obj 150 551 route list symbol;
#X floatatom 135 157 5 0 0 0 - - -;
#X obj 176 242 print route-list;
#X msg 125 117 1 2 3;
#X floatatom 122 239 5 0 0 0 - - -;
#X obj 122 278 print route-float;
#X obj 122 200 route float list;
#X msg 172 514 symbol zorglub;
#X obj 208 594 print untrimmed;
#X obj 150 630 print trimmed;
#X obj 550 268 list;
#X msg 492 123 list x y z;
#X msg 473 406 list;
#X msg 509 436 list 5;
#X msg 535 472 list pie;
#X text 511 406 becomes a bang;
#X text 561 435 becomes a float;
#X text 602 471 becomes a symbol;
#X obj 473 522 print;
#X text 448 338 Also note that we have special cases of list messages.
A list with no elements is converted by Pd into a 'bang' \, whereas
a single number becomes a float message and a single symbol becomes
a symbol message., f 71;
#X obj 536 520 route bang float symbol;
#X symbolatom 641 547 10 0 0 0 - - -;
#X floatatom 588 547 5 0 0 0 - - -;
#X obj 536 550 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 765 481 route pie;
#X msg 765 447 pie;
#X obj 765 518 print;
#X obj 859 518 print;
#X msg 859 447 12;
#X obj 859 481 route 12;
#X obj 550 240 route list float symbol bang pure, f 56;
#X msg 604 206 pure data;
#X text 426 17 The bang message is another special selector that you
can also use as a symbol argument for [route]. Below we abuse this
behaviour to route messages according to its type. Note that we have
a [list] object to give the 'list' selector back in the case of list
messages that start with a symbol. Note also that you can still use
other symbols to route other mesages., f 75;
#X text 679 207 not a special selector;
#X text 39 16 Numbers in Pd are always given a 'float' selector. Similarly
\, lists that start with floats are given the 'list' selector. These
are implicit selectors and they stick to the message even if you can't
see it and [route] cannot trim them!, f 50;
#X text 39 345 On the other hand \, a "list a b c" message gets its
list selector trimmed - as the usual behaviour of the object. The execption
and inconsistency is with 'symbol' messages \, where the symbol selector
is kept. This is a known bug that's been here forever and just won't
be fixed anymore., f 50;
#X text 450 589 One last special case of [route] is that it outputs
bangs when matching to messages that have no further elements. In a
sense it outputs a zero element list and that becomes a bang. Note
how in this case the behaviour is the same of the [select] object.
, f 71;
#X connect 2 0 40 0;
#X connect 3 0 40 0;
#X connect 4 0 40 0;
#X connect 5 0 40 0;
#X connect 9 0 10 0;
#X connect 10 0 19 0;
#X connect 10 1 18 0;
#X connect 11 0 16 0;
#X connect 13 0 16 0;
#X connect 14 0 15 0;
#X connect 16 0 14 0;
#X connect 16 1 12 0;
#X connect 17 0 10 0;
#X connect 20 0 0 0;
#X connect 21 0 40 0;
#X connect 22 0 28 0;
#X connect 22 0 30 0;
#X connect 23 0 28 0;
#X connect 23 0 30 0;
#X connect 24 0 28 0;
#X connect 24 0 30 0;
#X connect 30 0 33 0;
#X connect 30 1 32 0;
#X connect 30 2 31 0;
#X connect 34 0 36 0;
#X connect 35 0 34 0;
#X connect 38 0 39 0;
#X connect 39 0 37 0;
#X connect 40 0 20 0;
#X connect 40 1 1 0;
#X connect 40 2 6 0;
#X connect 40 3 7 0;
#X connect 40 4 8 0;
#X connect 41 0 40 0;
#X restore 712 430 pd special-selectors/message-types;
#X text 618 489 see also:;
#X obj 696 490 select;
#X text 590 259 In the case of messages that start with a symbol \,
the first element is also known as the 'selector' of the message. Hence
\, [route] trims the selector of the message when it matches one of
its symbol arguments., f 61;
#X text 36 54 Route checks the first element of a message against each
of its arguments \, which may be numbers or symbols (but not a mixture
of the two). If a match is found \, the rest of the message appears
on the corresponding outlet. If there's no match \, the message is
repeated to the last "rejection" outlet. The number of outlets is the
number of arguments plus one., f 74;
#X text 590 325 There are exeptions though when we're dealing with
special selectors that Pd deals with \, namely: list \, float \, symbol
and bang. One byproduct of [route] is that it can also be used to route
messages according to these types. Open the subpatch below for an example
and more details, f 61;
#X connect 3 0 0 0;
#X connect 3 1 1 0;
#X connect 3 2 2 0;
#X connect 3 3 24 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 9 0;
#X connect 9 0 16 0;
#X connect 9 1 17 0;
#X connect 9 2 25 0;
#X connect 10 0 9 0;
#X connect 11 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 3 0;
#X connect 20 0 31 0;
#X connect 20 1 32 0;
#X connect 21 0 20 0;
#X connect 22 0 20 1;
#X connect 23 0 20 0;
#X connect 26 0 33 0;
#X connect 26 1 34 0;
#X connect 27 0 26 0;
#X connect 28 0 26 0;
#X connect 29 0 26 1;
#X connect 30 0 29 0;
