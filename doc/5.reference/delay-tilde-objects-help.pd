#N canvas 455 51 953 560 12;
#X declare -stdpath ./;
#X text 750 224 creation argument: name of delay line, f 18;
#X obj 44 65 delread4~;
#X obj 703 284 vd~;
#X obj 612 231 delread4~ \$0-delay;
#X obj 69 306 delwrite~ \$0-delay 1000;
#X obj 612 199 line~;
#X obj 69 245 osc~ 440;
#X obj 612 278 output~;
#X obj 612 171 pack f 1000;
#X obj 396 226 declare -stdpath ./;
#X msg 89 274 clear;
#X text 134 274 set all samples of delay line to zero.;
#X text 243 304 1st argument: name of delay line, f 42;
#X obj 43 15 delwrite~;
#X text 115 15 - writes a signal in a delay line;
#X obj 50 40 delread~;
#X text 115 40 - read a signal from a delay line;
#X text 250 397 1st argument: name of delay line, f 33;
#X text 250 417 2nd argument: (initial) delay time in ms;
#X obj 85 443 output~;
#X text 597 77 The delay time is always at least one sample and at
most the length of the delay line (specified by a corresponding delwrite~).
, f 46;
#X obj 627 436 ../3.audio.examples/G05.execution.order;
#X text 579 346 In case the delwrite~ runs later in the DSP loop than
the delread~ or delread4~ objects \, the delay is constrained below
by one vector length (usually 64 samples.) Open the file below as an
example on how to control this to obtain very short delays., f 50
;
#X text 123 376 input (delay time in ms);
#X msg 49 376 500;
#X text 604 527 updated for Pd version 0.52;
#X text 243 321 2nd argument: length of delay line in msec (the maximum
delay time in read objects), f 42;
#X text 119 64 - read from a delay line with 4-point interpolation
(for variable delay times), f 40;
#X text 597 12 Delread4~ implements a 4-point interpolating delay tap.
The delay in milliseconds of the tap is specified by an incoming signal
for variable delay times., f 46;
#X text 656 198 signal input (variable delay time in ms);
#X text 736 283 - old name of delread4~ ('vd' for 'variable delay')
, f 27;
#X obj 487 71 vd~;
#X text 410 71 => a.k.a.:;
#X obj 130 528 fexpr~;
#X text 56 528 see also:;
#X text 598 471 See also other examples in the "G" section to learn
how to implement dealys with feedback., f 46;
#X obj 9 514 cnv 1 935 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#X obj 7 102 cnv 1 570 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#X text 488 21 <= click;
#N canvas 733 91 573 555 reference 0;
#X obj 181 18 delread4~;
#X obj 40 18 delwrite~;
#X obj 114 18 delread~;
#X text 256 18 - delay tilde objects.;
#X obj 8 97 cnv 5 550 5 empty empty INLET: 8 18 0 13 #202020 #000000
0;
#X obj 8 156 cnv 2 550 2 empty empty OUTLETS: 8 12 0 13 #202020 #000000
0;
#X obj 8 190 cnv 2 550 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000
0;
#X obj 7 256 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000
0;
#X text 161 165 NONE, f 45;
#X text 117 198 symbol -;
#X obj 43 67 delwrite~;
#X text 106 111 signal -;
#X text 173 111 signal input into the delay time., f 44;
#X text 113 129 clear -;
#X text 173 129 clear the delay time., f 44;
#X text 185 198 delay line name., f 47;
#X text 124 216 float -;
#X text 185 216 length of delay line in msec (the maximum delay time
in read objects)., f 47;
#X obj 7 53 cnv 2 550 2 empty empty empty 8 12 0 13 #202020 #000000
0;
#X obj 8 367 cnv 5 550 5 empty empty INLET: 8 18 0 13 #202020 #000000
0;
#X obj 8 435 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000
0;
#X obj 8 474 cnv 2 550 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000
0;
#X obj 7 531 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000
0;
#X text 107 484 symbol -;
#X text 175 484 delay line name., f 29;
#X text 114 503 float -;
#X obj 43 335 delread~;
#X text 113 382 float -;
#X obj 113 335 delread4~;
#X text 117 67 - write in a delay line.;
#X text 192 335 - read from a delay line.;
#X text 107 444 signal -;
#X obj 7 322 cnv 2 550 2 empty empty empty 8 12 0 13 #202020 #000000
0;
#X text 173 382 delay time in ms (for [delread~])., f 44;
#X text 106 402 signal -;
#X text 173 402 delay time in ms (for [delread4~])., f 44;
#X text 173 444 delayed signal., f 44;
#X text 175 503 initial delay time in ms for [delread~] (default 0).
;
#X restore 394 21 pd reference;
#X floatatom 69 218 5 0 0 0 - - - 0;
#X text 15 112 Delread~ and delread4~ objects read from a delay line
allocated in a delwrite~ object with the same name. Note that in this
help file we're using delay names with "\$0" (the patch ID number used
to force locality in Pd). You can use more than one delread~ and/or
delread4~ objects for the same delwrite~ object. If the specified delay
time in delread~/delread4~ is longer than the size of the delay line
or less than zero it is clipped to the length of the delay line.,
f 78;
#X obj 85 407 delread~ \$0-delay 500;
#X msg 85 376 1000;
#X msg 612 144 500;
#X msg 648 144 1000;
#X connect 3 0 7 0;
#X connect 3 0 7 1;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 8 0 5 0;
#X connect 10 0 4 0;
#X connect 24 0 42 0;
#X connect 40 0 6 0;
#X connect 42 0 19 0;
#X connect 42 0 19 1;
#X connect 43 0 42 0;
#X connect 44 0 8 0;
#X connect 45 0 8 0;
