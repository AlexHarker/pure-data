#N canvas 598 23 645 713 12;
#X floatatom 125 520 4 0 0 0 - - - 0;
#X obj 202 492 <;
#X obj 170 130 &&;
#X obj 211 129 ||;
#X obj 370 492 &;
#X obj 408 492 |;
#X obj 125 492 >;
#X obj 165 492 >=;
#X obj 277 492 ==;
#X obj 239 492 <=;
#X floatatom 370 397 5 0 0 0 - - - 0;
#X obj 370 427 t b f;
#X floatatom 490 520 7 0 0 0 - - - 0;
#X obj 490 492 <<;
#X obj 448 492 >>;
#X obj 316 492 !=;
#X obj 26 10 >;
#X obj 54 10 >=;
#X obj 110 10 <=;
#X obj 82 10 <;
#X obj 139 10 ==;
#X obj 167 10 !=;
#X obj 420 578 == 0;
#X obj 473 578 < 5;
#X obj 195 10 div;
#X obj 195 34 mod;
#X floatatom 95 239 4 0 0 0 - - - 0;
#X floatatom 53 238 4 0 0 0 - - - 0;
#X floatatom 95 150 4 0 0 0 - - - 0;
#X obj 53 210 div;
#X obj 95 177 t b f;
#X obj 95 211 mod;
#X text 399 679 Updated for Pd version 0.47;
#X obj 105 648 +;
#X text 28 654 see also:;
#X floatatom 125 397 5 0 0 0 - - - 0;
#X obj 26 34 &&;
#X obj 54 34 ||;
#X obj 82 34 &;
#X obj 110 34 |;
#X obj 138 34 <<;
#X obj 167 34 >>;
#X floatatom 53 150 4 0 0 0 - - - 0;
#X obj 518 578 div 3;
#X obj 105 675 expr;
#X text 146 676 - evaluation expressions, f 25;
#X obj 400 648 sin;
#X text 436 649 (etc) - math functions;
#X text 140 647 (etc) - binary arithmetic operators;
#X obj 170 75 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 211 96 t b f;
#X obj 211 75 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 170 155 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 211 155 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X text 264 110 || ('or) outputs 1 if either one is nonzero., f 47
;
#X text 245 137 note these expect integer input \, so 0.5 or -0.5 are
truncated to '0' and not considered 'nonzero'.;
#X text 49 561 All of these objects can have a creation argument to
initialize the right inlet. They also all take a bang message to evaluate
the operation with the previously set values., f 49;
#X text 264 77 && ('and') outputs 1 if both inputs are nonzero and
0 otherwise., f 47;
#X text 145 184 div and mod do integer division \, where div outputs
the integer quotient and mod outputs the remainder (modulus). In addition
the "%" operator (provided for back compatibility) is like "mod" but
acts differently for negative inputs (and might act variously depending
on CPU design)., f 62;
#X obj 405 248 %;
#X text 435 249 - deprecated;
#X text 35 278 The bitwise operators "&" and "|" perform "and" and
"or" on each bit of the inputs considered as binary numbers. the ">>"
and "<<" objects perform left and right signed bit shifts. These also
expect integer input and truncate float values., f 82;
#X text 35 328 Relational operators ('>' greater than \, '==' equals
\, '!=' not equals etc.) output 1 or 0 depending on whether the relation
is true or false. Unlike the previous ones \, these can deal with float
input., f 82;
#X floatatom 202 520 4 0 0 0 - - - 0;
#X floatatom 165 520 4 0 0 0 - - - 0;
#X floatatom 277 520 4 0 0 0 - - - 0;
#X floatatom 239 520 4 0 0 0 - - - 0;
#X floatatom 408 520 4 0 0 0 - - - 0;
#X floatatom 370 520 4 0 0 0 - - - 0;
#X floatatom 448 520 4 0 0 0 - - - 0;
#X floatatom 316 520 4 0 0 0 - - - 0;
#X floatatom 420 552 4 0 0 0 - - - 0;
#X floatatom 473 552 4 0 0 0 - - - 0;
#X floatatom 518 552 4 0 0 0 - - - 0;
#X floatatom 420 605 4 0 0 0 - - - 0;
#X floatatom 473 605 4 0 0 0 - - - 0;
#X floatatom 518 605 4 0 0 0 - - - 0;
#X text 224 22 - other binary operators;
#N canvas 667 222 578 313 reference 0;
#X obj 8 77 cnv 5 550 5 empty empty INLETS: 8 18 0 13 #202020 #000000
0;
#X obj 7 112 cnv 1 550 1 empty empty 1st: 8 12 0 13 #000000 #000000
0;
#X obj 8 208 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000
0;
#X obj 8 249 cnv 2 550 2 empty empty ARGUMENT: 8 12 0 13 #202020 #000000
0;
#X obj 7 288 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000
0;
#X obj 7 167 cnv 1 550 1 empty empty 2nd: 8 12 0 13 #7c7c7c #000000
0;
#X text 118 119 bang - output the operation on the previously set values.
;
#X text 111 138 float - value to the left side of operation and output.
, f 58;
#X text 112 177 float - value to the right side of operation., f 58
;
#X text 113 260 float - initialize value of right inlet (default 0).
, f 58;
#X text 113 218 float - the result of the operation., f 58;
#X obj 57 15 >;
#X obj 85 15 >=;
#X obj 141 15 <=;
#X obj 113 15 <;
#X obj 170 15 ==;
#X obj 198 15 !=;
#X obj 226 15 div;
#X obj 226 39 mod;
#X obj 57 39 &&;
#X obj 85 39 ||;
#X obj 113 39 &;
#X obj 141 39 |;
#X obj 169 39 <<;
#X obj 198 39 >>;
#X text 255 27 - other binary operators;
#X restore 494 24 pd reference;
#X text 427 24 click =>;
#X text 46 395 left input;
#X text 411 395 right input;
#X obj 10 63 cnv 1 620 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#X obj 10 638 cnv 1 620 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#X text 18 73 Logical operators ->;
#X connect 1 0 63 0;
#X connect 2 0 52 0;
#X connect 3 0 53 0;
#X connect 4 0 68 0;
#X connect 5 0 67 0;
#X connect 6 0 0 0;
#X connect 7 0 64 0;
#X connect 8 0 65 0;
#X connect 9 0 66 0;
#X connect 10 0 11 0;
#X connect 11 0 6 0;
#X connect 11 0 15 0;
#X connect 11 0 14 0;
#X connect 11 0 13 0;
#X connect 11 0 9 0;
#X connect 11 0 8 0;
#X connect 11 0 7 0;
#X connect 11 0 5 0;
#X connect 11 0 4 0;
#X connect 11 0 1 0;
#X connect 11 1 4 1;
#X connect 11 1 5 1;
#X connect 11 1 13 1;
#X connect 11 1 14 1;
#X connect 11 1 6 1;
#X connect 11 1 7 1;
#X connect 11 1 8 1;
#X connect 11 1 15 1;
#X connect 11 1 9 1;
#X connect 11 1 1 1;
#X connect 13 0 12 0;
#X connect 14 0 69 0;
#X connect 15 0 70 0;
#X connect 22 0 74 0;
#X connect 23 0 75 0;
#X connect 28 0 30 0;
#X connect 29 0 27 0;
#X connect 30 0 31 0;
#X connect 30 0 29 0;
#X connect 30 1 31 1;
#X connect 30 1 29 1;
#X connect 31 0 26 0;
#X connect 35 0 4 0;
#X connect 35 0 5 0;
#X connect 35 0 13 0;
#X connect 35 0 14 0;
#X connect 35 0 6 0;
#X connect 35 0 7 0;
#X connect 35 0 8 0;
#X connect 35 0 9 0;
#X connect 35 0 1 0;
#X connect 35 0 15 0;
#X connect 42 0 29 0;
#X connect 42 0 31 0;
#X connect 43 0 76 0;
#X connect 49 0 2 0;
#X connect 49 0 3 0;
#X connect 50 0 2 0;
#X connect 50 0 3 0;
#X connect 50 1 3 1;
#X connect 50 1 2 1;
#X connect 51 0 50 0;
#X connect 71 0 22 0;
#X connect 72 0 23 0;
#X connect 73 0 43 0;
